{"ast":null,"code":"var _jsxFileName = \"/Users/andy.ratsirarson/Desktop/Front-End-Rooster-Grin---React/src/components/SectionTwo/ReadMore.js\";\nimport React, { Component } from 'react';\nimport './read-more.css';\nconst ELLIPSES = '…';\nconst SHOW_LESS_TEXT = 'Show Less';\nconst SHOW_MORE_TEXT = 'Read More';\nexport default class ReadMore extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingAll: false\n    };\n\n    this.toggleReadMore = () => {\n      this.setState({\n        showingAll: !this.state.showingAll\n      });\n    };\n\n    this._getReadMoreParts = ({\n      text,\n      numberOfLines,\n      readMoreCharacterLimit\n    }) => {\n      let teaserText;\n      let remainingText;\n      let remainingWordsArray = [];\n\n      if (text) {\n        const teaserWordsArray = text.split(' ');\n\n        while (teaserWordsArray.join(' ').length > readMoreCharacterLimit) {\n          remainingWordsArray.unshift(teaserWordsArray.pop());\n        }\n\n        teaserText = teaserWordsArray.join(' ');\n\n        if (remainingWordsArray.length > 0) {\n          remainingText = remainingWordsArray.join(' ');\n        }\n      }\n\n      return {\n        teaserText,\n        remainingText\n      };\n    };\n\n    this.getText = ({\n      showingAll,\n      text,\n      readMoreCharacterLimit,\n      numberOfLines\n    }) => {\n      let _this$_getReadMorePar = this._getReadMoreParts({\n        text,\n        numberOfLines,\n        readMoreCharacterLimit\n      }),\n          teaserText = _this$_getReadMorePar.teaserText,\n          remainingText = _this$_getReadMorePar.remainingText;\n\n      if (!showingAll && text.length > readMoreCharacterLimit) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, teaserText.replace(/\\s*$/, \"\"), React.createElement(\"span\", {\n          className: \"read-more__text--remaining read-more__text--hide\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, remainingText), ELLIPSES);\n      }\n\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, teaserText, React.createElement(\"span\", {\n        className: \"read-more__text--remaining read-more__text--show\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, remainingText));\n    };\n\n    this.getActionButton = ({\n      showingAll,\n      showLessButton\n    }) => {\n      if (showingAll && !showLessButton) {\n        return;\n      }\n\n      let buttonText = showingAll ? SHOW_LESS_TEXT : SHOW_MORE_TEXT;\n      return React.createElement(\"button\", {\n        onClick: this.toggleReadMore,\n        className: \"read-more__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, buttonText);\n    };\n  }\n\n  componentDidMount() {\n    this.props.onContentChange();\n  }\n\n  render() {\n    let _this$props = this.props,\n        text = _this$props.text,\n        readMoreCharacterLimit = _this$props.readMoreCharacterLimit,\n        showLessButton = _this$props.showLessButton,\n        onContentChange = _this$props.onContentChange,\n        numberOfLines = _this$props.numberOfLines,\n        lineHeight = _this$props.lineHeight;\n    console.log(numberOfLines, lineHeight, numberOfLines * lineHeight);\n    let maxHeight = numberOfLines * lineHeight;\n    let style = {\n      lineHeight,\n      maxHeight: `${maxHeight}em`\n    };\n    let showingAll = this.state.showingAll;\n    let textToDisplay = this.getText({\n      showingAll,\n      text,\n      readMoreCharacterLimit,\n      numberOfLines\n    });\n    let actionButton = this.getActionButton({\n      showingAll,\n      showLessButton\n    });\n    return React.createElement(\"div\", {\n      className: \"read-more\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, textToDisplay, \" \", actionButton);\n  }\n\n}\nReadMore.defaultProps = {\n  numberOfLines: 2,\n  lineHeight: 1,\n  readMoreCharacterLimit: 100,\n  showLessButton: false\n};\n;","map":{"version":3,"sources":["/Users/andy.ratsirarson/Desktop/Front-End-Rooster-Grin---React/src/components/SectionTwo/ReadMore.js"],"names":["React","Component","ELLIPSES","SHOW_LESS_TEXT","SHOW_MORE_TEXT","ReadMore","state","showingAll","toggleReadMore","setState","_getReadMoreParts","text","numberOfLines","readMoreCharacterLimit","teaserText","remainingText","remainingWordsArray","teaserWordsArray","split","join","length","unshift","pop","getText","replace","getActionButton","showLessButton","buttonText","componentDidMount","props","onContentChange","render","lineHeight","console","log","maxHeight","style","textToDisplay","actionButton","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './read-more.css';\n\nconst ELLIPSES = '…';\nconst SHOW_LESS_TEXT = 'Show Less';\nconst SHOW_MORE_TEXT = 'Read More';\n\nexport default class ReadMore extends Component {\n\n  static defaultProps = {\n    numberOfLines: 2,\n    lineHeight: 1,\n    readMoreCharacterLimit: 100,\n    showLessButton: false\n  }\n\n  state = { \n    showingAll: false\n  }\n\n  componentDidMount() {\n    this.props.onContentChange();\n  }\n  \n  toggleReadMore = () => {\n    this.setState({\n      showingAll: !this.state.showingAll\n    });\n  }\n\n  _getReadMoreParts = ({text, numberOfLines, readMoreCharacterLimit}) => {\n      let teaserText;\n      let remainingText;\n      let remainingWordsArray = [];\n\n      if (text) {\n          const teaserWordsArray = text.split(' ');\n\n          while (teaserWordsArray.join(' ').length > readMoreCharacterLimit ) {\n              remainingWordsArray.unshift(teaserWordsArray.pop());\n          }\n\n          teaserText = teaserWordsArray.join(' ');\n\n          if (remainingWordsArray.length > 0) {\n              remainingText = remainingWordsArray.join(' ');\n          }\n      }\n\n      return {\n          teaserText,\n          remainingText\n      };\n  };\n\n  getText = ({showingAll, text, readMoreCharacterLimit, numberOfLines}) => {\n    let {\n      teaserText,\n      remainingText\n     } = this._getReadMoreParts({text, numberOfLines, readMoreCharacterLimit});\n\n    if (!showingAll && text.length > readMoreCharacterLimit) {\n      return (\n        <span>\n          {teaserText.replace(/\\s*$/, \"\")}\n          <span className=\"read-more__text--remaining read-more__text--hide\">\n            {remainingText}\n          </span>{ELLIPSES}\n        </span>\n      );\n    }\n\n    return (\n      <span>\n        {teaserText}\n        <span className=\"read-more__text--remaining read-more__text--show\">\n          {remainingText}\n        </span>\n      </span>\n    );\n  }\n\n  getActionButton = ({showingAll, showLessButton}) => {\n    if (showingAll && !showLessButton) {\n      return\n    }\n\n    let buttonText = showingAll ? SHOW_LESS_TEXT : SHOW_MORE_TEXT;\n\n    return (\n      <button \n        onClick={this.toggleReadMore}\n        className=\"read-more__button\"\n        >\n          {buttonText}\n      </button>\n    );\n  }\n\n  render () {\n    let {\n      text, \n      readMoreCharacterLimit, \n      showLessButton,\n      onContentChange,\n      numberOfLines,\n      lineHeight\n    } = this.props;\n\n    console.log(numberOfLines, lineHeight, numberOfLines * lineHeight);\n    let maxHeight = numberOfLines * lineHeight;\n    let style = {\n      lineHeight,\n      maxHeight: `${maxHeight}em`\n    }\n    let {showingAll} = this.state;\n    let textToDisplay = this.getText({showingAll, text, readMoreCharacterLimit, numberOfLines});\n    let actionButton = this.getActionButton({showingAll, showLessButton});\n\n    return (\n      <div className=\"read-more\" style={style}>\n        {textToDisplay} {actionButton}\n      </div>\n    )\n  };\n\n};\n"]},"metadata":{},"sourceType":"module"}